This patch is to fix the reboot on the SPI with 4-bit address enabled.
Logic take from openwrt patch https://patchwork.ozlabs.org/patch/545092/
Modified to work on kernel 4.4.x

InvizBox Limited
---

--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -309,10 +309,24 @@ static int m25p_remove(struct spi_device
 {
 	struct m25p	*flash = spi_get_drvdata(spi);
 
+	if ((&flash->spi_nor)->addr_width > 3) {
+		printk(KERN_INFO "m25p80: exit 4-byte address mode\n");
+		flash->command[0] = SPINOR_OP_EX4B;  // exit 4-byte address mode: 0xe9
+		spi_write(flash->spi, flash->command, 1);
+		flash->command[0] = 0x66;  // enable reset
+		spi_write(flash->spi, flash->command, 1);
+		flash->command[0] = 0x99;  // reset
+		spi_write(flash->spi, flash->command, 1);
+	}
 	/* Clean up MTD stuff. */
 	return mtd_device_unregister(&flash->spi_nor.mtd);
 }
 
+static void m25p_shutdown(struct spi_device *spi)
+{
+	m25p_remove(spi);
+}
+
 /*
  * Do NOT add to this array without reading the following:
  *
@@ -387,6 +401,7 @@ static struct spi_driver m25p80_driver =
 	.id_table	= m25p_ids,
 	.probe	= m25p_probe,
 	.remove	= m25p_remove,
+	.shutdown = m25p_shutdown,
 
 	/* REVISIT: many of these chips have deep power-down modes, which
 	 * should clearly be entered on suspend() to minimize power use.
